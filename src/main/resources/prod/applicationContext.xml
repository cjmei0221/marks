<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd "
    default-lazy-init="true">
    <context:component-scan base-package="com.grgbanking">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<bean class="com.grgbanking.smart.web.config.EncryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:commonConfig.properties</value>
				<value>classpath:sso.properties</value>
				<value>classpath*:config.properties</value>
			</list>
		</property>
	</bean>

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="hibernateProperties">
	       <props>
	           <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
	           <prop key="hibernate.hbm2ddl.auto">update</prop>
	           <prop key="hibernate.show_sql">true</prop>
	           <!--
	           <prop key="hibernate.format_sql">true</prop>-->

	           <prop key="hibernate.connection.useUnicode">true</prop>
	           <prop key="hibernate.connection.characterEncoding">UTF-8</prop>
	           <prop key="javax.persistence.validation.mode">none</prop>
	           <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>

	           <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop><!-- 指定cache实现类 -->
	           <prop key="hibernate.cache.use_second_level_cache">true</prop><!-- 启用二级缓存 -->
	           <prop key="hibernate.cache.use_query_cache">true</prop><!-- 启用查询缓存 -->
	           <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop><!-- 指定ehcache配置文件 -->

	       </props>
	    </property>
	    <property name="packagesToScan">
	        <list>
	           <value>com.grgbanking.smart.*.*.entity</value>
	        </list>
	    </property>
	    <property name="mappingResources">
	       <list>
	          <value>hbm/snaker.task.hbm.xml</value>
	          <value>hbm/snaker.order.hbm.xml</value>
	          <value>hbm/snaker.ccorder.hbm.xml</value>
	          <value>hbm/snaker.process.hbm.xml</value>
	          <value>hbm/snaker.taskactor.hbm.xml</value>
	          <value>hbm/snaker.workitem.hbm.xml</value>
	          <value>hbm/snaker.surrogate.hbm.xml</value>
	       </list>
	    </property>
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="execute*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />

			<!-- snaker事务 -->
			<tx:method name="start*" propagation="REQUIRED"/>
			<tx:method name="assign*" propagation="REQUIRED" />
			<tx:method name="complete*" propagation="REQUIRED" />
			<tx:method name="finish*" propagation="REQUIRED" />
			<tx:method name="terminate*" propagation="REQUIRED" />
			<tx:method name="take*" propagation="REQUIRED" />
			<tx:method name="deploy*" propagation="REQUIRED" />
			<tx:method name="undeploy*" propagation="REQUIRED" />
			<tx:method name="redeploy*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="withdraw*" propagation="REQUIRED"/>
			<tx:method name="resume*" propagation="REQUIRED"/>

			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="is*" propagation="REQUIRED" read-only="true" />
 			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="check*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />

		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.grgbanking.smart.*.dao..*.*(..))
		or execution(* com.grgbanking.smart.*.dao..*.*(..))
		or execution(* com.grgbanking.smart.*.service.impl..*.*(..))
		or execution(* com.grgbanking.smart.*.service..*.*(..))
		or execution(* org.snaker.engine.core..*.*(..))
		or execution(* com.grgbanking.smart.gzw.access..*.*(..))"/>
	</aop:config>
	<aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- 支持注解事物 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 定义用于执行定时任务的类(扫描任务定时器)-->
	<bean id="scanProcess" class="com.grgbanking.smart.flow.timer.ScanProcessTimer" />
	<!-- 定时器配置 -->
	<bean id="scanProcessJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scanProcess" />
		<property name="targetMethod" value="run" />
		<!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
		<property name="concurrent" value="false"></property>
	</bean>

	<!--定时获取快报数据-->
	<bean id="updateDataMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="inputJob" />
		<property name="targetMethod" value="execute"/>
	</bean>

	<bean id="updateDataJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="updateDataMethod" />
		<property name="cronExpression" value="${updateData.cron}" />
	</bean>

	<!--&lt;!&ndash;1级集团定时器。每天凌晨4点获取集团列表数据&ndash;&gt;-->
	<!--<bean id="investJobMethod" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
		<!--<property name="targetObject" ref="invest" />-->
		<!--<property name="targetMethod" value="execute"/>-->
	<!--</bean>-->
	<!--<bean id="investJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
		<!--<property name="jobDetail" ref="investJobMethod"></property>-->
		<!--<property name="cronExpression" value="0 13 1 * * ?" />-->
	<!--</bean>-->


	<!-- 启动定时器 -->
	<bean id="startJob" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="updateDataJobTrigger"/>
			</list>
		</property>
	</bean>
	<import resource="classpath*:spring-mybatis/spring-mybatis.xml"/>
	<import resource="classpath:snaker/applicationContext-snaker.xml"/>

	<!--  kisso 注入初始化，也支持使用 web.xml 初始化 -->
	<bean id="initKisso" class="com.grgbanking.smart.web.kisso.WebKissoConfigurer" init-method="initKisso">
		<property name="ssoConfig" ref="ssoConfig"/>
	</bean>

	<bean id="ssoConfig" class="com.baomidou.kisso.SSOConfig">
		<property name="loginUrl" value="${loginUrl}" />
		<property name="logoutUrl" value="${logoutUrl}" />
		<property name="cookieName" value="${cookieName}"/>
		<property name="cookieDomain" value="${cookieDomain}" />
		<property name="signkey" value="${signkey}"/>
	</bean>

	<!-- CXF实现webService配置 -->
 	<!--<bean id="gzwServiceImpl" class="com.grgbanking.smart.webService.gzwServiceImpl" />
	<jaxws:endpoint id="gzwService" implementor="#gzwServiceImpl" address="/gzwService" />
  -->
</beans>
