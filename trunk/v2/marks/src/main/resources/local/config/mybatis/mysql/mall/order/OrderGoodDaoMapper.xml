<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.marks.module.mall.order.dao.OrderGoodDao">

	<select id="findById" resultType="com.marks.module.mall.order.pojo.OrderGood">
		SELECT t.goodId,
		t.goodNo,
		t.goodName,
		t.barNo,
		t.unit,
		t.rank,
		t.brandId,
		t.brandName,
		t.typeId,
		t.typeName,
		t.imageurl AS picUrl,
		t.vipPrice,
		t.salePrice,
		t.costPrice,
		c.lvl1Id,
		c.lvl1Name,
		c.lvl2Id,
		c.lvl2Name,
		c.lvl3Id,
		c.lvl3Name,
		c.lvl4Id,
		c.lvl4Name,
		c.lvl5Id,
		c.lvl5Name,
		t.point,
		t.needPoint as usePoint
		FROM
		tb_mall_good_info t
		LEFT JOIN tb_mall_category c ON t.typeId = c.typeid
		LEFT JOIN tb_mall_trace_barcode b ON t.goodId = b.goodId
		where
		t.companyId=#{companyId} and
		(t.goodId=#{goodId} or
		t.goodNo=#{goodId}
		or t.barNo=#{goodId} or b.barcode=#{goodId})
	</select>
	<select id="findByOrderId" resultType="com.marks.module.mall.order.pojo.OrderGood">
		SELECT *
		FROM
		TB_MALL_ORDER_GOOD t where t.ORDERID=#{orderId}
	</select>

	<insert id="save" parameterType="com.marks.module.mall.order.pojo.OrderGood">
		<!--<selectKey keyProperty="orderGoodId" resultType="String" order="BEFORE">select 
			replace(uuid(),'-','')</selectKey> -->

		INSERT INTO TB_MALL_ORDER_GOOD (
		ORDERGOODID,
		ORDERID,
		GOODID,
		GOODNO,
		GOODNAME,
		BARNO,
		PICURL,
		UNIT,
		RANK,
		TYPEID,
		TYPENAME,
		BRANDID,
		BRANDNAME,
		NUMS,
		SALEPRICE,
		PAYABLEAMT,
		PAYAMT,
		CASHAMT,
		WXAMT,
		ALIPAYAMT,
		OTHERAMT,
		SALESAMT,
		DISCOUNTAMT,
		FULLCUTAMT,
		COUPONAMT,
		POINTAMT,
		MLAMT,
		SIMPLEDISCOUNTAMT,
		CREATETIME,
		UPDATETIME,
		COSTAMT,
		COSTPRICE,
		remarks,
		salePriceAmt,
		payRate,
		companyId,
		LVL1ID,
		LVL1NAME,
		LVL2ID,
		LVL2NAME,
		LVL3ID,
		LVL3NAME,
		LVL4ID,
		LVL4NAME,
		LVL5ID,
		LVL5NAME,
		nowPrice,
		nowPriceAmt,
		point,
		usePoint,
		goodManDiscountAmt,
		storedAmt,
		recevieAmt,
		payPrice,
		helpCode,
		model,
		oldOrderGoodId
		)
		VALUES(
		#{info.orderGoodId:VARCHAR},
		#{info.orderId:VARCHAR},
		#{info.goodId:VARCHAR},
		#{info.goodNo:VARCHAR},
		#{info.goodName:VARCHAR},
		#{info.barNo:VARCHAR},
		#{info.picUrl:VARCHAR},
		#{info.unit:VARCHAR},
		#{info.rank:VARCHAR},
		#{info.typeId:VARCHAR},
		#{info.typeName:VARCHAR},
		#{info.brandId:VARCHAR},
		#{info.brandName:VARCHAR},
		#{info.nums:NUMERIC},
		#{info.salePrice:VARCHAR},
		#{info.payableAmt:VARCHAR},
		#{info.payAmt:VARCHAR},
		#{info.cashAmt:VARCHAR},
		#{info.wxAmt:VARCHAR},
		#{info.alipayAmt:VARCHAR},
		#{info.otherAmt:VARCHAR},
		#{info.salesAmt:VARCHAR},
		#{info.discountAmt:VARCHAR},
		#{info.fullCutAmt:VARCHAR},
		#{info.couponAmt:VARCHAR},
		#{info.pointAmt:VARCHAR},
		#{info.mlAmt:VARCHAR},
		#{info.simpleDiscountAmt:VARCHAR},
		#{info.createtime:VARCHAR},
		#{info.updatetime:VARCHAR},
		#{info.costAmt:VARCHAR},
		#{info.costPrice:VARCHAR},
		#{info.remarks:VARCHAR},
		#{info.salePriceAmt:VARCHAR},
		#{info.payRate:VARCHAR},
		#{info.companyId:VARCHAR},
		#{info.lvl1Id:VARCHAR},
		#{info.lvl1Name:VARCHAR},
		#{info.lvl2Id:VARCHAR},
		#{info.lvl2Name:VARCHAR},
		#{info.lvl3Id:VARCHAR},
		#{info.lvl3Name:VARCHAR},
		#{info.lvl4Id:VARCHAR},
		#{info.lvl4Name:VARCHAR},
		#{info.lvl5Id:VARCHAR},
		#{info.lvl5Name:VARCHAR},
		#{info.nowPrice:VARCHAR},
		#{info.nowPriceAmt:VARCHAR},
		#{info.point:NUMERIC},
		#{info.usePoint:NUMERIC},
		#{info.goodManDiscountAmt:VARCHAR},
		#{info.storedAmt:VARCHAR},
		#{info.recevieAmt:VARCHAR},
		#{info.payPrice:VARCHAR},
		#{info.helpCode:VARCHAR},
		#{info.model:VARCHAR},
		#{info.oldOrderGoodId:VARCHAR}
		)
	</insert>

	<insert id="saveBatch" parameterType="java.util.List">
		INSERT INTO TB_MALL_ORDER_GOOD (
		ORDERGOODID,
		ORDERID,
		GOODID,
		GOODNO,
		GOODNAME,
		BARNO,
		PICURL,
		UNIT,
		RANK,
		TYPEID,
		TYPENAME,
		BRANDID,
		BRANDNAME,
		NUMS,
		SALEPRICE,
		PAYABLEAMT,
		PAYAMT,
		CASHAMT,
		WXAMT,
		ALIPAYAMT,
		OTHERAMT,
		SALESAMT,
		DISCOUNTAMT,
		FULLCUTAMT,
		COUPONAMT,
		POINTAMT,
		MLAMT,
		SIMPLEDISCOUNTAMT,
		CREATETIME,
		UPDATETIME,
		COSTAMT,
		COSTPRICE,
		remarks,
		salePriceAmt,
		payRate,
		companyId,
		LVL1ID,
		LVL1NAME,
		LVL2ID,
		LVL2NAME,
		LVL3ID,
		LVL3NAME,
		LVL4ID,
		LVL4NAME,
		LVL5ID,
		LVL5NAME,
		nowPrice,
		nowPriceAmt,
		point,
		usePoint,
		goodManDiscountAmt,
		storedAmt,
		recevieAmt,
		payPrice,
		helpCode,
		model,
		oldOrderGoodId
		)
		VALUES
		<foreach collection="list" item="info" index="index"
			separator=",">
			(
			#{info.orderGoodId:VARCHAR},
			#{info.orderId:VARCHAR},
			#{info.goodId:VARCHAR},
			#{info.goodNo:VARCHAR},
			#{info.goodName:VARCHAR},
			#{info.barNo:VARCHAR},
			#{info.picUrl:VARCHAR},
			#{info.unit:VARCHAR},
			#{info.rank:VARCHAR},
			#{info.typeId:VARCHAR},
			#{info.typeName:VARCHAR},
			#{info.brandId:VARCHAR},
			#{info.brandName:VARCHAR},
			#{info.nums:NUMERIC},
			#{info.salePrice:VARCHAR},
			#{info.payableAmt:VARCHAR},
			#{info.payAmt:VARCHAR},
			#{info.cashAmt:VARCHAR},
			#{info.wxAmt:VARCHAR},
			#{info.alipayAmt:VARCHAR},
			#{info.otherAmt:VARCHAR},
			#{info.salesAmt:VARCHAR},
			#{info.discountAmt:VARCHAR},
			#{info.fullCutAmt:VARCHAR},
			#{info.couponAmt:VARCHAR},
			#{info.pointAmt:VARCHAR},
			#{info.mlAmt:VARCHAR},
			#{info.simpleDiscountAmt:VARCHAR},
			#{info.createtime:VARCHAR},
			#{info.updatetime:VARCHAR},
			#{info.costAmt:VARCHAR},
			#{info.costPrice:VARCHAR},
			#{info.remarks:VARCHAR},
			#{info.salePriceAmt:VARCHAR},
			#{info.payRate:VARCHAR},
			#{info.companyId:VARCHAR},
			#{info.lvl1Id:VARCHAR},
			#{info.lvl1Name:VARCHAR},
			#{info.lvl2Id:VARCHAR},
			#{info.lvl2Name:VARCHAR},
			#{info.lvl3Id:VARCHAR},
			#{info.lvl3Name:VARCHAR},
			#{info.lvl4Id:VARCHAR},
			#{info.lvl4Name:VARCHAR},
			#{info.lvl5Id:VARCHAR},
			#{info.lvl5Name:VARCHAR},
			#{info.nowPrice:VARCHAR},
			#{info.nowPriceAmt:VARCHAR},
			#{info.point:NUMERIC},
			#{info.usePoint:NUMERIC},
			#{info.goodManDiscountAmt:VARCHAR},
			#{info.storedAmt:VARCHAR},
			#{info.recevieAmt:VARCHAR},
			#{info.payPrice:VARCHAR},
			#{info.helpCode:VARCHAR},
			#{info.model:VARCHAR},
			#{info.oldOrderGoodId:VARCHAR}
			)
		</foreach>
	</insert>

	<update id="update" parameterType="com.marks.module.mall.order.pojo.OrderGood">
		UPDATE TB_MALL_ORDER_GOOD
		SET
		hadRefundNums=#{info.hadRefundNums:NUMERIC},
		hadRefundAmt=#{info.hadRefundAmt:VARCHAR},
		UPDATETIME =now()
		WHERE
		ORDERGOODID =
		#{info.orderGoodId}
	</update>
	<delete id="delete" parameterType="String">
		DELETE FROM TB_MALL_ORDER_GOOD
		WHERE ORDERGOODID=#{orderGoodId}
	</delete>

	<select id="findAll" resultType="com.marks.module.mall.order.pojo.OrderGood">
		SELECT * FROM TB_MALL_ORDER_GOOD
		t
	</select>

	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM TB_MALL_ORDER_GOOD WHERE ORDERGOODID in
		<foreach collection="list" item="ids" index="index" open="("
			separator="," close=")">
			#{ids}
		</foreach>
	</delete>

	<select id="list" resultType="com.marks.module.mall.order.pojo.OrderGood"
		parameterType="java.util.Map">
		SELECT *
		FROM TB_MALL_ORDER_GOOD t
		WHERE 1=1
		<if test="orderId!=null and orderId!=''">
			and t.orderId=#{orderId}
		</if>
		<if test="keyword!=null and keyword!=''">
			and ( 2=1
			or t.ORDERID LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.GOODNO
			LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.GOODNAME LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.BARNO LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.UNIT LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.RANK LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.TYPEID LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.TYPENAME LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.BRANDID LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			or t.BRANDNAME LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')
			)
		</if>


		order by t.ORDERGOODID
	</select>



</mapper>