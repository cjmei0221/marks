<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.marks.module.user.sysuser.dao.SysUserDao">

	<select id="findById" resultType="com.marks.module.user.sysuser.pojo.SysUser">
		select * from tb_user t
		where
		t.userid=#{userid}
	</select>
	<select id="findByUserid" resultType="com.marks.module.user.sysuser.pojo.SysUser">
		select
		u.*
		from tb_user u
		where u.USERID =#{userid}
	</select>

	<select id="findByMobile" resultType="com.marks.module.user.sysuser.pojo.SysUser">
		select * from tb_user t
		where t.bind_mobile=#{mobile} and t.COMPANYID=#{companyId}
	</select>
	<insert id="save" parameterType="com.marks.module.user.sysuser.pojo.SysUser">
		INSERT INTO tb_user
		(
		USERID,
		USERNAME,
		PASSWORD,
		BIND_MOBILE,
		ACTIVEFLAG,
		CREATETIME,
		UPDATETIME,
		CREATOR,
		COMPANYID,
		TOKEN,
		ROLEID,
		openid,
		accountid,
		userCode,
		roleName,
		roleType,
		roleLvl,
		orgId,
		orgName,
		orgType,
		orgCategory,
		parentOrgId,
		parentOrgName,
		gender,
		birthday,
		signature,
		idNumber,
		email,
		entryDate
		)
		VALUES(
		#{userid:VARCHAR},
		#{username:VARCHAR},
		#{password:VARCHAR},
		#{bind_mobile:VARCHAR},
		#{activeFlag:NUMERIC},
		now(),
		now(),
		#{creator:VARCHAR},
		#{companyId:VARCHAR},
		#{token:VARCHAR},
		#{roleId:VARCHAR},
		#{openid:VARCHAR},
		#{accountid:VARCHAR},
		#{userCode:VARCHAR},
		#{roleName:VARCHAR},
		#{roleType:VARCHAR},
		#{roleLvl:NUMERIC},
		#{orgId:VARCHAR},
		#{orgName:VARCHAR},
		#{orgType:NUMERIC},
		#{orgCategory:NUMERIC},
		#{parentOrgId:VARCHAR},
		#{parentOrgName:VARCHAR},
		#{gender:NUMERIC},
		#{birthday:VARCHAR},
		#{signature:VARCHAR},
		#{idNumber:VARCHAR},
		#{email:VARCHAR},
		#{entryDate:VARCHAR}
		)
	</insert>

	<update id="update" parameterType="com.marks.module.user.sysuser.pojo.SysUser">
		UPDATE tb_user
		SET
		gender=#{gender:NUMERIC},
		birthday=#{birthday:VARCHAR},
		signature=#{signature:VARCHAR},
		idNumber=#{idNumber:VARCHAR},
		email=#{email:VARCHAR},
		entryDate=#{entryDate:VARCHAR},
		roleName=#{roleName:VARCHAR},
		roleType=#{roleType:VARCHAR},
		roleLvl=#{roleLvl:NUMERIC},
		orgId=#{orgId:VARCHAR},
		orgName=#{orgName:VARCHAR},
		orgType=#{orgType:NUMERIC},
		orgCategory=#{orgCategory:NUMERIC},
		parentOrgId=#{parentOrgId:VARCHAR},
		parentOrgName=#{parentOrgName:VARCHAR},
		USERNAME =
		#{username:VARCHAR},
		ACTIVEFLAG =
		#{activeFlag:NUMERIC},
		UPDATETIME =
		now(),
		COMPANYID =
		#{companyId:VARCHAR},
		TOKEN = #{token:VARCHAR},
		openid
		= #{openid:VARCHAR},
		accountid = #{accountid:VARCHAR},
		ROLEID=#{roleId:VARCHAR}
		WHERE
		USERID
		= #{userid}
	</update>
	<update id="updatePwd" parameterType="com.marks.module.user.sysuser.pojo.SysUser">
		UPDATE tb_user
		SET
		PASSWORD
		=
		#{password:VARCHAR},
		UPDATETIME = now()
		WHERE
		USERID
		= #{userid}
	</update>

	<update id="updateActiveFlag">
		UPDATE tb_user
		SET
		ACTIVEFLAG = #{flag},
		UPDATETIME
		=now()
		WHERE
		USERID
		= #{userid}
	</update>

	<update id="updateMobile">
		UPDATE tb_user
		SET
		BIND_MOBILE =
		#{newPhone:VARCHAR},
		UPDATETIME = now()
		WHERE
		USERID=#{userid}
	</update>

	<delete id="delete" parameterType="String">
		DELETE FROM tb_user WHERE
		USERID=#{userid}
	</delete>
	<select id="findAll" resultType="com.marks.module.user.sysuser.pojo.SysUser">
		SELECT * FROM tb_user
	</select>

	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM tb_user WHERE USERID in
		<foreach collection="list" item="ids" index="index" open="("
			separator="," close=")">
			#{ids}
		</foreach>
	</delete>

	<select id="list" resultType="com.marks.module.user.sysuser.pojo.SysUser"
		parameterType="java.util.Map">
		SELECT  sysuser.*
		FROM tb_user sysuser
		join tb_sys_role tsr on (
		sysuser.roleid = tsr.roleid)
		WHERE 1=1 and sysuser.hideFlag =0
		<if test="companyId !=null and companyId != ''">
			and sysuser.COMPANYID = #{companyId}
		</if>
		<if test="roleType !=null and roleType != ''">
			and sysuser.roleType = #{roleType}
		</if>
		<if test="roleType == null or roleType == ''">
			 and tsr.showflag=1
		</if>
		<if test="keyword!=null and keyword!=''">
			and (
			sysuser.USERID LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')

			or sysuser.USERNAME LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')

			or sysuser.BIND_MOBILE LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')

			or sysuser.ACTIVEFLAG LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')

			or sysuser.CREATETIME LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')

			or sysuser.CREATOR LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')

			or sysuser.COMPANYID LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')

			or sysuser.TOKEN LIKE
			CONCAT(CONCAT('%',#{keyword:VARCHAR}),'%')

			)
		</if>
		<if test="sorgid !=null and sorgid != ''">
			and sysuser.orgid like '%${sorgid}%'
		</if>
		<if test="s_role !=null and s_role != ''">
			and sysuser.roleid like '%${s_role}%'
		</if>
		order by sysuser.UPDATETIME desc
	</select>

	<delete id="deleteSysUserOrgRole" parameterType="String">
		DELETE FROM
		TB_USER_ORG_ROLE WHERE USERID=#{userid} and ORGID=#{orgid}
	</delete>
	<delete id="deleteSysUserOrgRoleByUserid" parameterType="String">
		DELETE
		FROM
		TB_USER_ORG_ROLE WHERE USERID=#{userid}
	</delete>
	<insert id="saveSysUserOrgRole" parameterType="com.marks.module.user.sysuser.pojo.SysUserOrgRole">
		INSERT INTO
		TB_USER_ORG_ROLE (
		USERID,
		companyId,
		ORGID,
		orgName,
		orgType,
		orgCategory,
		parentOrgId,
		parentOrgName,
		roleId,
		roleName,
		roleType,
		roleLvl,
		UPDATETIME
		)
		VALUES(
		#{userid:VARCHAR},
		#{companyId:VARCHAR},
		#{orgId:VARCHAR},
		#{orgName:VARCHAR},
		#{orgType:NUMERIC},
		#{orgCategory:NUMERIC},
		#{parentOrgId:VARCHAR},
		#{parentOrgName:VARCHAR},
		#{roleId:VARCHAR},
		#{roleName:VARCHAR},
		#{roleType:VARCHAR},
		#{roleLvl:NUMERIC},
		now()
		)
	</insert>
	<update id="updateSkin" flushCache="true">
		update tb_user set
		skin=#{skin},UPDATETIME=now() where userid=#{userid}
	</update>
</mapper>